# CI Github Actions pour LogOn
# Lint + Test sur push et pull_request
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Lint frontend
        run: npm run lint
        working-directory: ./frontend
      - name: Install backend deps
        run: npm ci
        working-directory: ./backend
      - name: Lint backend
        run: npm run lint
        working-directory: ./backend

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install frontend deps
        run: npm ci
        working-directory: ./frontend
      - name: Test frontend
        run: npm run test
        working-directory: ./frontend
      - name: Install backend deps
        run: npm ci
        working-directory: ./backend
      - name: Test backend
        run: npm run test
        working-directory: ./backend

  docker-compose-up:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Compose up (build only)
        run: |
          docker-compose -f docker-compose.yml up --build -d
      - name: Check running containers
        run: docker ps -a
      - name: Wait for services to be healthy
        run: |
          sleep 15
          docker-compose ps
      - name: Afficher les logs backend
        run: docker-compose logs backend || true
      - name: Afficher les logs frontend
        run: docker-compose logs frontend || true
      - name: Vérifier que le backend répond (port 3000)
        run: |
          curl -f http://localhost:3000/ || (docker-compose logs backend && exit 1)
      - name: Vérifier que le frontend répond (port 3001)
        run: |
          curl -f http://localhost:3001/ || (docker-compose logs frontend && exit 1)
      - name: Vérifier que la base de données est accessible
        run: |
          docker-compose exec -T backend npx prisma db pull || (docker-compose logs backend && exit 1)
      - name: Vérifier endpoint API REST /api/health
        run: |
          curl -f http://localhost:3000/api/health || (docker-compose logs backend && exit 1)
      - name: Stop and remove containers
        run: docker-compose -f docker-compose.yml down
